### YamlMime:ManagedReference
items:
- uid: HCMCalc_UrbanStreets.ApproachData
  commentId: T:HCMCalc_UrbanStreets.ApproachData
  id: ApproachData
  parent: HCMCalc_UrbanStreets
  children:
  - HCMCalc_UrbanStreets.ApproachData.#ctor
  - HCMCalc_UrbanStreets.ApproachData.#ctor(System.Int32,HCMCalc_UrbanStreets.TravelDirection,System.String,System.Single,System.Collections.Generic.List{HCMCalc_UrbanStreets.LaneGroupData})
  - HCMCalc_UrbanStreets.ApproachData.DemandVolume
  - HCMCalc_UrbanStreets.ApproachData.Dir
  - HCMCalc_UrbanStreets.ApproachData.Id
  - HCMCalc_UrbanStreets.ApproachData.Label
  - HCMCalc_UrbanStreets.ApproachData.LaneGroups
  - HCMCalc_UrbanStreets.ApproachData.LeftTurnBayExists
  - HCMCalc_UrbanStreets.ApproachData.PctGrade
  - HCMCalc_UrbanStreets.ApproachData.PctLeftTurns
  - HCMCalc_UrbanStreets.ApproachData.PctRightTurns
  - HCMCalc_UrbanStreets.ApproachData.Results
  - HCMCalc_UrbanStreets.ApproachData.RightTurnBayExists
  langs:
  - csharp
  - vb
  name: ApproachData
  nameWithType: ApproachData
  fullName: HCMCalc_UrbanStreets.ApproachData
  type: Class
  source:
    id: ApproachData
    path: ''
    startLine: 5052
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  summary: "\nParameters required for creating an approach.\n"
  example: []
  syntax:
    content: public class ApproachData
    content.vb: Public Class ApproachData
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: HCMCalc_UrbanStreets.ApproachData.#ctor
  commentId: M:HCMCalc_UrbanStreets.ApproachData.#ctor
  id: '#ctor'
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: ApproachData()
  nameWithType: ApproachData.ApproachData()
  fullName: HCMCalc_UrbanStreets.ApproachData.ApproachData()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 5070
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  summary: "\nParameterless constructor needed for XML de/serialization. Do not use.\n"
  example: []
  syntax:
    content: public ApproachData()
    content.vb: Public Sub New
  overload: HCMCalc_UrbanStreets.ApproachData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.#ctor(System.Int32,HCMCalc_UrbanStreets.TravelDirection,System.String,System.Single,System.Collections.Generic.List{HCMCalc_UrbanStreets.LaneGroupData})
  commentId: M:HCMCalc_UrbanStreets.ApproachData.#ctor(System.Int32,HCMCalc_UrbanStreets.TravelDirection,System.String,System.Single,System.Collections.Generic.List{HCMCalc_UrbanStreets.LaneGroupData})
  id: '#ctor(System.Int32,HCMCalc_UrbanStreets.TravelDirection,System.String,System.Single,System.Collections.Generic.List{HCMCalc_UrbanStreets.LaneGroupData})'
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: ApproachData(Int32, TravelDirection, String, Single, List<LaneGroupData>)
  nameWithType: ApproachData.ApproachData(Int32, TravelDirection, String, Single, List<LaneGroupData>)
  fullName: HCMCalc_UrbanStreets.ApproachData.ApproachData(System.Int32, HCMCalc_UrbanStreets.TravelDirection, System.String, System.Single, System.Collections.Generic.List<HCMCalc_UrbanStreets.LaneGroupData>)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 5083
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  summary: "\nConstructor for creating an approach.\n"
  example: []
  syntax:
    content: public ApproachData(int id, TravelDirection dir, string label, float pctGrade, List<LaneGroupData> laneGroups)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    - id: dir
      type: HCMCalc_UrbanStreets.TravelDirection
      description: ''
    - id: label
      type: System.String
      description: ''
    - id: pctGrade
      type: System.Single
      description: ''
    - id: laneGroups
      type: System.Collections.Generic.List{HCMCalc_UrbanStreets.LaneGroupData}
      description: ''
    content.vb: Public Sub New(id As Integer, dir As TravelDirection, label As String, pctGrade As Single, laneGroups As List(Of LaneGroupData))
  overload: HCMCalc_UrbanStreets.ApproachData.#ctor*
  nameWithType.vb: ApproachData.ApproachData(Int32, TravelDirection, String, Single, List(Of LaneGroupData))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: HCMCalc_UrbanStreets.ApproachData.ApproachData(System.Int32, HCMCalc_UrbanStreets.TravelDirection, System.String, System.Single, System.Collections.Generic.List(Of HCMCalc_UrbanStreets.LaneGroupData))
  name.vb: ApproachData(Int32, TravelDirection, String, Single, List(Of LaneGroupData))
- uid: HCMCalc_UrbanStreets.ApproachData.Dir
  commentId: P:HCMCalc_UrbanStreets.ApproachData.Dir
  id: Dir
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: Dir
  nameWithType: ApproachData.Dir
  fullName: HCMCalc_UrbanStreets.ApproachData.Dir
  type: Property
  source:
    id: Dir
    path: ''
    startLine: 5093
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public TravelDirection Dir { get; set; }
    parameters: []
    return:
      type: HCMCalc_UrbanStreets.TravelDirection
    content.vb: Public Property Dir As TravelDirection
  overload: HCMCalc_UrbanStreets.ApproachData.Dir*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.Id
  commentId: P:HCMCalc_UrbanStreets.ApproachData.Id
  id: Id
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ApproachData.Id
  fullName: HCMCalc_UrbanStreets.ApproachData.Id
  type: Property
  source:
    id: Id
    path: ''
    startLine: 5095
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: HCMCalc_UrbanStreets.ApproachData.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.Label
  commentId: P:HCMCalc_UrbanStreets.ApproachData.Label
  id: Label
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: ApproachData.Label
  fullName: HCMCalc_UrbanStreets.ApproachData.Label
  type: Property
  source:
    id: Label
    path: ''
    startLine: 5096
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public string Label { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Label As String
  overload: HCMCalc_UrbanStreets.ApproachData.Label*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.DemandVolume
  commentId: P:HCMCalc_UrbanStreets.ApproachData.DemandVolume
  id: DemandVolume
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: DemandVolume
  nameWithType: ApproachData.DemandVolume
  fullName: HCMCalc_UrbanStreets.ApproachData.DemandVolume
  type: Property
  source:
    id: DemandVolume
    path: ''
    startLine: 5097
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public float DemandVolume { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property DemandVolume As Single
  overload: HCMCalc_UrbanStreets.ApproachData.DemandVolume*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.PctLeftTurns
  commentId: P:HCMCalc_UrbanStreets.ApproachData.PctLeftTurns
  id: PctLeftTurns
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: PctLeftTurns
  nameWithType: ApproachData.PctLeftTurns
  fullName: HCMCalc_UrbanStreets.ApproachData.PctLeftTurns
  type: Property
  source:
    id: PctLeftTurns
    path: ''
    startLine: 5098
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public float PctLeftTurns { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property PctLeftTurns As Single
  overload: HCMCalc_UrbanStreets.ApproachData.PctLeftTurns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.PctRightTurns
  commentId: P:HCMCalc_UrbanStreets.ApproachData.PctRightTurns
  id: PctRightTurns
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: PctRightTurns
  nameWithType: ApproachData.PctRightTurns
  fullName: HCMCalc_UrbanStreets.ApproachData.PctRightTurns
  type: Property
  source:
    id: PctRightTurns
    path: ''
    startLine: 5099
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public float PctRightTurns { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property PctRightTurns As Single
  overload: HCMCalc_UrbanStreets.ApproachData.PctRightTurns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.PctGrade
  commentId: P:HCMCalc_UrbanStreets.ApproachData.PctGrade
  id: PctGrade
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: PctGrade
  nameWithType: ApproachData.PctGrade
  fullName: HCMCalc_UrbanStreets.ApproachData.PctGrade
  type: Property
  source:
    id: PctGrade
    path: ''
    startLine: 5100
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public float PctGrade { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property PctGrade As Single
  overload: HCMCalc_UrbanStreets.ApproachData.PctGrade*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.LaneGroups
  commentId: P:HCMCalc_UrbanStreets.ApproachData.LaneGroups
  id: LaneGroups
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: LaneGroups
  nameWithType: ApproachData.LaneGroups
  fullName: HCMCalc_UrbanStreets.ApproachData.LaneGroups
  type: Property
  source:
    id: LaneGroups
    path: ''
    startLine: 5101
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public List<LaneGroupData> LaneGroups { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{HCMCalc_UrbanStreets.LaneGroupData}
    content.vb: Public Property LaneGroups As List(Of LaneGroupData)
  overload: HCMCalc_UrbanStreets.ApproachData.LaneGroups*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.Results
  commentId: P:HCMCalc_UrbanStreets.ApproachData.Results
  id: Results
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: Results
  nameWithType: ApproachData.Results
  fullName: HCMCalc_UrbanStreets.ApproachData.Results
  type: Property
  source:
    id: Results
    path: ''
    startLine: 5102
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public ResultsIntersectionApproachData Results { get; set; }
    parameters: []
    return:
      type: HCMCalc_UrbanStreets.ResultsIntersectionApproachData
    content.vb: Public Property Results As ResultsIntersectionApproachData
  overload: HCMCalc_UrbanStreets.ApproachData.Results*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.LeftTurnBayExists
  commentId: P:HCMCalc_UrbanStreets.ApproachData.LeftTurnBayExists
  id: LeftTurnBayExists
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: LeftTurnBayExists
  nameWithType: ApproachData.LeftTurnBayExists
  fullName: HCMCalc_UrbanStreets.ApproachData.LeftTurnBayExists
  type: Property
  source:
    id: LeftTurnBayExists
    path: ''
    startLine: 5103
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public bool LeftTurnBayExists { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LeftTurnBayExists As Boolean
  overload: HCMCalc_UrbanStreets.ApproachData.LeftTurnBayExists*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: HCMCalc_UrbanStreets.ApproachData.RightTurnBayExists
  commentId: P:HCMCalc_UrbanStreets.ApproachData.RightTurnBayExists
  id: RightTurnBayExists
  parent: HCMCalc_UrbanStreets.ApproachData
  langs:
  - csharp
  - vb
  name: RightTurnBayExists
  nameWithType: ApproachData.RightTurnBayExists
  fullName: HCMCalc_UrbanStreets.ApproachData.RightTurnBayExists
  type: Property
  source:
    id: RightTurnBayExists
    path: ''
    startLine: 5104
  assemblies:
  - cs.temp.dll
  namespace: HCMCalc_UrbanStreets
  syntax:
    content: public bool RightTurnBayExists { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RightTurnBayExists As Boolean
  overload: HCMCalc_UrbanStreets.ApproachData.RightTurnBayExists*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: HCMCalc_UrbanStreets
  commentId: N:HCMCalc_UrbanStreets
  name: HCMCalc_UrbanStreets
  nameWithType: HCMCalc_UrbanStreets
  fullName: HCMCalc_UrbanStreets
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: HCMCalc_UrbanStreets.ApproachData.#ctor*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.#ctor
  name: ApproachData
  nameWithType: ApproachData.ApproachData
  fullName: HCMCalc_UrbanStreets.ApproachData.ApproachData
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: HCMCalc_UrbanStreets.TravelDirection
  commentId: T:HCMCalc_UrbanStreets.TravelDirection
  parent: HCMCalc_UrbanStreets
  name: TravelDirection
  nameWithType: TravelDirection
  fullName: HCMCalc_UrbanStreets.TravelDirection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Collections.Generic.List{HCMCalc_UrbanStreets.LaneGroupData}
  commentId: T:System.Collections.Generic.List{HCMCalc_UrbanStreets.LaneGroupData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<LaneGroupData>
  nameWithType: List<LaneGroupData>
  fullName: System.Collections.Generic.List<HCMCalc_UrbanStreets.LaneGroupData>
  nameWithType.vb: List(Of LaneGroupData)
  fullName.vb: System.Collections.Generic.List(Of HCMCalc_UrbanStreets.LaneGroupData)
  name.vb: List(Of LaneGroupData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HCMCalc_UrbanStreets.LaneGroupData
    name: LaneGroupData
    nameWithType: LaneGroupData
    fullName: HCMCalc_UrbanStreets.LaneGroupData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HCMCalc_UrbanStreets.LaneGroupData
    name: LaneGroupData
    nameWithType: LaneGroupData
    fullName: HCMCalc_UrbanStreets.LaneGroupData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: HCMCalc_UrbanStreets.ApproachData.Dir*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.Dir
  name: Dir
  nameWithType: ApproachData.Dir
  fullName: HCMCalc_UrbanStreets.ApproachData.Dir
- uid: HCMCalc_UrbanStreets.ApproachData.Id*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.Id
  name: Id
  nameWithType: ApproachData.Id
  fullName: HCMCalc_UrbanStreets.ApproachData.Id
- uid: HCMCalc_UrbanStreets.ApproachData.Label*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.Label
  name: Label
  nameWithType: ApproachData.Label
  fullName: HCMCalc_UrbanStreets.ApproachData.Label
- uid: HCMCalc_UrbanStreets.ApproachData.DemandVolume*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.DemandVolume
  name: DemandVolume
  nameWithType: ApproachData.DemandVolume
  fullName: HCMCalc_UrbanStreets.ApproachData.DemandVolume
- uid: HCMCalc_UrbanStreets.ApproachData.PctLeftTurns*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.PctLeftTurns
  name: PctLeftTurns
  nameWithType: ApproachData.PctLeftTurns
  fullName: HCMCalc_UrbanStreets.ApproachData.PctLeftTurns
- uid: HCMCalc_UrbanStreets.ApproachData.PctRightTurns*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.PctRightTurns
  name: PctRightTurns
  nameWithType: ApproachData.PctRightTurns
  fullName: HCMCalc_UrbanStreets.ApproachData.PctRightTurns
- uid: HCMCalc_UrbanStreets.ApproachData.PctGrade*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.PctGrade
  name: PctGrade
  nameWithType: ApproachData.PctGrade
  fullName: HCMCalc_UrbanStreets.ApproachData.PctGrade
- uid: HCMCalc_UrbanStreets.ApproachData.LaneGroups*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.LaneGroups
  name: LaneGroups
  nameWithType: ApproachData.LaneGroups
  fullName: HCMCalc_UrbanStreets.ApproachData.LaneGroups
- uid: HCMCalc_UrbanStreets.ApproachData.Results*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.Results
  name: Results
  nameWithType: ApproachData.Results
  fullName: HCMCalc_UrbanStreets.ApproachData.Results
- uid: HCMCalc_UrbanStreets.ResultsIntersectionApproachData
  commentId: T:HCMCalc_UrbanStreets.ResultsIntersectionApproachData
  parent: HCMCalc_UrbanStreets
  name: ResultsIntersectionApproachData
  nameWithType: ResultsIntersectionApproachData
  fullName: HCMCalc_UrbanStreets.ResultsIntersectionApproachData
- uid: HCMCalc_UrbanStreets.ApproachData.LeftTurnBayExists*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.LeftTurnBayExists
  name: LeftTurnBayExists
  nameWithType: ApproachData.LeftTurnBayExists
  fullName: HCMCalc_UrbanStreets.ApproachData.LeftTurnBayExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: HCMCalc_UrbanStreets.ApproachData.RightTurnBayExists*
  commentId: Overload:HCMCalc_UrbanStreets.ApproachData.RightTurnBayExists
  name: RightTurnBayExists
  nameWithType: ApproachData.RightTurnBayExists
  fullName: HCMCalc_UrbanStreets.ApproachData.RightTurnBayExists
